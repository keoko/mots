#+title: Journal
* 2025
** 2025/Oct/25
*** improve UX to understand the game
*** improve offline mode
it seems it crashes the service worker after refreshing the mage on mobile (airplane mode)
*** feat: add version tracking, enhanced keyboard, help modal, and offline-first PWA
*** feat: implement dynamic grid cell sizing
** 2025/Oct/24
*** changed game UI like wordle
*** started looking into local first apps: local persistence
*** minor improvements
- favicon
** 2025/Oct/23
*** changed my mind and we will implement this game with vanilla JS. Why?
- no need of backend, I wanted to play with Erlang/Gleam but new there is no need.
- LLMs make a lot of mistakes with Gleam and Lustre (e.g. list.at, FFIs in Lustre, etc)
- prefer to explore more local first apps (e.g. web APIs, state sync, etc)
*** difficulties to improve UI with Claude Code
- wanted to fix some gaps, but it required several iterations and it didn't quite work
** 2025/Oct/22
*** word collections
*** word collections moved to JSON files
*** used FFI to fetch JSON files in JS
had some issues to understand where to place the FFI file, and also the mapping of function names
the FFI should be placed on src/ folder, and when building the app it is moved to the assets folder
** 2025/Oct/21
*** deploy with GH actions
Looks like there are some mistakes on the documentation.
https://hexdocs.pm/lustre/guide/04-spa-deployments.html

** 2025/Oct/19
*** chatgpt/claude makes mistakes when writing Gleam code like using list.at
list.at function does not exist in Erlang
*** erlang.get_line does not work
I used another package called input, but maybe it could work using external function erlang.get_line, not sure how it works
